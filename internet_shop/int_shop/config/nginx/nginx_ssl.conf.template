upstream django_app {
        server unix:/var/run/wsgi/int_shop.sock;
   }

    server {
        # незащищенный протокол с переадресаций на протокол с ssl
        listen           80 default_server;
        server_name      ${DOMAIN} www.${DOMAIN};

        # директория для поиска challenge файла для завершения аутенификации
        location /.well-known/acme-challenge/ {
            root        /vol/www/;
        }

        location / {
            return 301  https://$host$request_uri;
        }
    }

    server {
        # защищенный протокол ssl с адресами к ключу и сертификату
        listen 443 ssl;
        server_name             ${DOMAIN} www.${DOMAIN}; # certbot будет сохранять ключ и файл сертификата по этому адресу

        ssl_certificate         /home/nginx/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key     /home/nginx/letsencrypt/live/${DOMAIN}/privkey.pem;

        # базовая конфигурация сервера с ssl для использования с certbot
        include                 /etc/nginx/options-ssl-nginx.conf;

        # параметры, которые определяют обмен ключами Diffie-Hellman с клиентом
        ssl_dhparam             /vol/proxy/ssl-dhparams.pem;

        # заголовок запроса для запоминания браузером, что этот веб домен использует только HTTPS
        add_header              Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # запрещает отображать версию nginx’а в поле Server в Header Response
        server_tokens           off;

        location / {
            proxy_set_header        X-Forwarded-Proto https;  # заголовок для django для идентификации https
            include                 /etc/nginx/uwsgi_params;
            uwsgi_pass              django_app;
            client_max_body_size    10M;
        }

        # соответствует пути, указанном в STATIC_URL
        location /static/ {
            alias /vol/web/static/;
        }
        # соответствует пути, указанном в MEDIA_URL
        location /media/ {
            alias /vol/web/media/;
        }

        # тайм-аут для keep-alive соединений. Сервер закроет соединения после истечения этого времени
        keepalive_timeout 65;

        # разрешение сервера закрывать соединия после того, как клиент перестает отвечать
        reset_timedout_connection on;
    }
