upstream django_app {
        server unix:/var/run/wsgi/int_shop.sock;
   }

    server {
        # not secure protocol with redirection to ssl protocol
        listen           80 default_server;
        server_name      ${DOMAIN} www.${DOMAIN};

        # directory for searching challenge file for complete authentication
        location /.well-known/acme-challenge/ {
            root        /vol/www/;
        }

        location / {
            return 301  https://$host$request_uri;
        }
    }

    server {
        # secure protocol ssl with pathes to key and certificate
        listen 443 ssl;
        server_name             ${DOMAIN} www.${DOMAIN}; # certbot will save key and cerificate file to this path

        ssl_certificate         /home/nginx/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key     /home/nginx/letsencrypt/live/${DOMAIN}/privkey.pem;
        # base server configuration with ssl for using with certbot
        include                 /etc/nginx/options-ssl-nginx.conf;
        # parameters, that defines exchange Diffie-Hellman keys with a client
        ssl_dhparam             /vol/proxy/ssl-dhparams.pem;

        # request header to remember by the browser that this web domain only uses HTTPS
        add_header              Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # forbidden to show nginx version in the Header Response Server field
        server_tokens           off;

        location / {
            proxy_set_header        X-Forwarded-Proto https;  # header for django in order to identify HTTPS
            include                 /etc/nginx/uwsgi_params;
            uwsgi_pass              django_app;
            client_max_body_size    10M;
        }

        # corresponds the path, specified in STATIC_URL
        location /static/ {
            alias /vol/web/static/;
        }
        # corresponds the path, specified in MEDIA_URL
        location /media/ {
            alias /vol/web/media/;
        }

        # timeout for keep-alive connections.Server will close the connection after this time expiration
        keepalive_timeout 65;

        # server permission to close connection after client stoping response
        reset_timedout_connection on;
    }
