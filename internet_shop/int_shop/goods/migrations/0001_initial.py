# Generated by Django 4.1.7 on 2023-02-26 12:03

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Manufacturer',
                'verbose_name_plural': 'Manufacturers',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screen_diagonal', models.CharField(blank=True, max_length=5, verbose_name='Screen Diagonal')),
                ('screen_resolution', models.CharField(blank=True, max_length=15, verbose_name='Screen Resolution')),
                ('screen_type', models.CharField(blank=True, choices=[('OLED', 'OLED'), ('TFT', 'TFT'), ('IPS', 'IPS')], max_length=4, verbose_name='Scree Type')),
                ('cpu', models.CharField(blank=True, max_length=30, verbose_name='CPU model')),
                ('cpu_freq', models.CharField(blank=True, max_length=50, verbose_name='CPU Frequency')),
                ('cpu_cores', models.CharField(blank=True, max_length=10, verbose_name=' # CPU Cores')),
                ('ram_type', models.CharField(blank=True, choices=[('DDR3', 'DDR3'), ('DDR4', 'DDR4'), ('DDR5', 'DDR5')], max_length=4, verbose_name='RAM Type')),
                ('ram_value', models.CharField(blank=True, max_length=10, verbose_name='RAM Capacity')),
                ('rom_value', models.CharField(blank=True, max_length=10, verbose_name='ROM Capacity')),
                ('rom_type', models.CharField(blank=True, choices=[('HDD', 'Hard Disk Drive'), ('SSD', 'Solid State Drive'), ('SSD/HDD', 'Solid State Drive/Hard Disk Drive'), ('UFS', 'UFS')], max_length=7, verbose_name='ROM Type')),
                ('graphics_type', models.CharField(blank=True, choices=[('Discrete', 'D'), ('Integrated', 'I'), ('Integrated/Discrete', 'I/D')], max_length=20, verbose_name='Graphic Type')),
                ('graphics_ram_value', models.CharField(blank=True, max_length=40, verbose_name='RAM Graphic')),
                ('operation_system', models.CharField(blank=True, choices=[('Linux', 'Linux'), ('MacOS', 'MacOS'), ('Windows', 'Windows'), ('Android', 'Android'), ('IOS', 'IOS')], max_length=8, verbose_name='Operation System')),
                ('hdmi', models.BooleanField(blank=True, verbose_name='HDMI')),
                ('wifi_type', models.CharField(blank=True, choices=[('802.11 a/b/g/', '802.11 a/b/g/'), ('802.11 a/b/g/n', '802.11 a/b/g/n'), ('802.11 a/b/g/n/ac', '802.11 a/b/g/n/ac')], max_length=20, verbose_name='WI-FI')),
                ('usb_type', models.CharField(blank=True, choices=[('USB v.2', '2'), ('USB v.3', '3'), ('USB v.2/USB v.3', '2/3')], max_length=15, verbose_name='USB')),
                ('bluetooth', models.CharField(blank=True, max_length=20, verbose_name='Bluetooth')),
                ('connection', models.CharField(blank=True, choices=[('2G', '2G'), ('3G', '3G'), ('4G', '4G'), ('5G', '5G')], max_length=2, verbose_name='Connections')),
                ('work_time', models.DecimalField(blank=True, decimal_places=2, max_digits=6, verbose_name='Working time, Hours')),
                ('dimensions', models.CharField(blank=True, max_length=50, verbose_name='Dimensions')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=8, verbose_name='Weight')),
                ('material', models.CharField(blank=True, max_length=50, verbose_name='Material')),
                ('equipment', models.CharField(blank=True, max_length=255, verbose_name='Equipment')),
                ('camera_main', models.CharField(blank=True, max_length=50, verbose_name='Main Camera')),
                ('camera_front', models.CharField(blank=True, max_length=50, verbose_name='Front Camera')),
                ('battery_cap', models.CharField(blank=True, max_length=30, verbose_name='Battery Capacity')),
                ('quick_charge', models.BooleanField(blank=True, verbose_name='Quick Charge')),
                ('charge_power', models.IntegerField(blank=True, verbose_name='Power Charge')),
                ('sensors', models.CharField(blank=True, max_length=200, verbose_name='Sensors')),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=0, verbose_name='Rating')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='products/%Y/%m/%d')),
                ('available', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('rating', models.DecimalField(decimal_places=1, default=0, max_digits=2, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('5'))])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='goods.category')),
                ('manufacturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='goods.manufacturer')),
                ('properties', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_properties', to='goods.property')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('product', models.ManyToManyField(to='goods.product')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile_favorite', to='account.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=30, verbose_name='Name')),
                ('user_email', models.EmailField(default='', max_length=254, verbose_name='Email')),
                ('body', models.TextField(verbose_name='Review Text')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='goods.product')),
                ('profile', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, related_name='profile_comments', to='account.profile')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
    ]
