version: "3.8"

services:
  web:
    build:
      context: .
    container_name: web_app
    image: django_web:1.0
    ports:
      - "5000:5000"
    volumes:
      - .:/code
      - postgres_socket:/var/run/postgresql  # volume для подключения БД через сокет
      - wsgi_socket:/var/run/wsgi  # volume для подключения nginx через сокет
    env_file: # файл с переменными окружения
      - docker.env
    command: ["uwsgi", "--ini", "/code/config/uwsgi/uwsgi.ini"]
    depends_on:
      - db
      - redis_db

  db:
    image: postgres:14.6-alpine
    container_name: postgres_db
    env_file:
      - docker.env
    volumes:
      - shop_db_data:/var/lib/postgresql/data
      - postgres_socket:/var/run/postgresql  # использование подключения через сокет
    ports:
      - "5431:5431"  # host:docker
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-p", "5431", "-d", "shop_db", "-U", "admin_shop" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  redis_db:
    image: redis:7-alpine3.16
    container_name: redis_db
    restart: on-failure
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis_conf/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf  # использование кастомного конфига
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  rabbitmq:
    image: rabbitmq:3.10-alpine
    user: "rabbitmq"
    container_name: rabbitmq_broker
    volumes:
      - rabbitmq_db:/var/lib/rabbitmq/
      - rabbitmq_conf:/etc/rabbitmq/
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_running" ]

  celery:
    image: django_web:1.0
    container_name: celery_tasks
    env_file:
      docker.env
    volumes:
      - .:/code
      - postgres_socket:/var/run/postgresql  # использование подключения через к БД через сокет
    command: celery -A int_shop worker -l INFO
    depends_on:
      - db
      - rabbitmq
      - web

  payment:
    image: stripe/stripe-cli
    container_name: stripe_payments
    env_file:
      - docker.env
    command: listen --forward-to web/payment/webhook/ # TODO think how to check webhooks
    volumes:
      - wsgi_socket:/var/run/wsgi
    depends_on:
      - db
      - web
      - celery
      - rabbitmq

  nginx:
    image: nginx:stable-alpine
    container_name: nginx_static
    restart: always
    volumes:
      - .:/code
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - wsgi_socket:/var/run/wsgi
    ports:
      - "80:80"
      - "443:443"

volumes:
  shop_db_data:
  redis_data:
  rabbitmq_db:
  rabbitmq_conf:
  postgres_socket:
  wsgi_socket:
#  code: